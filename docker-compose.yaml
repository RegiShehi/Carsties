services:
    postgres:
        image: postgres:17.0
        container_name: postgres
        environment:
            POSTGRES_PASSWORD: postgrespw
        ports:
            - "5432:5432"
        volumes:
            - pgdata:/var/lib/postgresql/data
    mongodb:
        image: mongo
        container_name: mongodb
        environment:
            - MONGO_INITDB_ROOT_USERNAME=root
            - MONGO_INITDB_ROOT_PASSWORD=mongopw
        ports:
            - "27017:27017"
        volumes:
            - mongodata:/data/db
    rabbitmq:
        image: rabbitmq:4.0.3-management-alpine
        container_name: rabbitmq
        ports:
            - "5672:5672"
            - "15672:15672"
        environment:
            RABBITMQ_DEFAULT_USER: guest
            RABBITMQ_DEFAULT_PASS: guest
    auction-svc:
        container_name: auction-service
        build:
            context: .
            dockerfile: src/AuctionService/Dockerfile
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - ASPNETCORE_URLS=http://+:80
            - RabbitMq__Host=rabbitmq
            - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=postgrespw;Database=auctions
            - IdentityServiceUrl=http://identity-svc
        ports:
            - "7001:80"
        depends_on:
            - postgres
            - rabbitmq
    search-svc:
        container_name: search-service
        build:
            context: .
            dockerfile: src/SearchService/Dockerfile
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - ASPNETCORE_URLS=http://+:80
            - RabbitMq__Host=rabbitmq
            - ConnectionStrings__MongoDbConnection=mongodb://root:mongopw@mongodb
            - AuctionServiceUrl=http://auction-svc
        ports:
            - "7002:80"
        depends_on:
            - mongodb
            - rabbitmq
            - auction-svc
    identity-svc:
        container_name: identity-service
        build:
            context: .
            dockerfile: src/IdentityService/Dockerfile
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - ASPNETCORE_URLS=http://+:80
            - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=postgrespw;Database=identity
        ports:
            - "5001:80"
        depends_on:
            - postgres

volumes:
    pgdata:
    mongodata: